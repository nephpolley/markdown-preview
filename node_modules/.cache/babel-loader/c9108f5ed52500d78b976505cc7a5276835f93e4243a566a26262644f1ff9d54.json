{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spoon\\\\OneDrive\\\\Documents\\\\GitHub\\\\markdown-preview\\\\src\\\\components\\\\Main.js\";\nimport React from \"react\";\nimport InputBox from \"./InputBox\";\nimport Preview from \"./Preview\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultText = \"# Welcome to my React Markdown Previewer!\\n\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n\\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n\\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.org), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | -------------\\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n\\n\\n1. And there are numbered lists too.\\n1. Use just 1s if you want!\\n1. And last but not least, let's not forget embedded images:\\n\\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\\n\";\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: defaultText\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(text) {\n    this.setState({\n      text\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(InputBox, {\n        text: this.state.text,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        html: marked(this.state.text, {})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","InputBox","Preview","marked","jsxDEV","_jsxDEV","defaultText","Main","Component","constructor","props","state","text","handleChange","bind","setState","render","id","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","html"],"sources":["C:/Users/spoon/OneDrive/Documents/GitHub/markdown-preview/src/components/Main.js"],"sourcesContent":["import React from \"react\";\r\nimport InputBox from \"./InputBox\";\r\nimport Preview from \"./Preview\";\r\nimport { marked } from \"marked\";\r\n\r\nconst defaultText =\r\n  \"# Welcome to my React Markdown Previewer!\\n\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\n\\nHeres some code, `<div></div>`, between 2 backticks.\\n\\n```\\n// this is multi-line code:\\n\\nfunction anotherExample(firstLine, lastLine) {\\n  if (firstLine == '```' && lastLine == '```') {\\n    return multiLineCode;\\n  }\\n}\\n```\\n\\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\n\\nThere's also [links](https://www.freecodecamp.org), and\\n> Block Quotes!\\n\\nAnd if you want to get really crazy, even tables:\\n\\nWild Header | Crazy Header | Another Header?\\n------------ | ------------- | -------------\\nYour content can | be here, and it | can be here....\\nAnd here. | Okay. | I think we get it.\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n     - With different indentation levels.\\n        - That look like this.\\n\\n\\n1. And there are numbered lists too.\\n1. Use just 1s if you want!\\n1. And last but not least, let's not forget embedded images:\\n\\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\\n\";\r\n\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: defaultText,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(text) {\r\n    this.setState({ text });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"mainDiv\">\r\n        <InputBox text={this.state.text} onChange={this.handleChange} />\r\n        <Preview html={marked(this.state.text, {})} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GACf,wpCAAwpC;AAE1pC,eAAe,MAAMC,IAAI,SAASP,KAAK,CAACQ,SAAS,CAAC;EAChDC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAEN;IACR,CAAC;IACD,IAAI,CAACO,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAYA,CAACD,IAAI,EAAE;IACjB,IAAI,CAACG,QAAQ,CAAC;MAAEH;IAAK,CAAC,CAAC;EACzB;EAEAI,MAAMA,CAAA,EAAG;IACP,oBACEX,OAAA;MAAKY,EAAE,EAAC,SAAS;MAAAC,QAAA,gBACfb,OAAA,CAACJ,QAAQ;QAACW,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;QAACO,QAAQ,EAAE,IAAI,CAACN;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChElB,OAAA,CAACH,OAAO;QAACsB,IAAI,EAAErB,MAAM,CAAC,IAAI,CAACQ,KAAK,CAACC,IAAI,EAAE,CAAC,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}